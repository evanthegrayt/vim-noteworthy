*noteworthy.txt*  *noteworthy*
================================================================================
                  _  _     _                      _   _                        ~
                 | \| |___| |_ _____ __ _____ _ _| |_| |_ _  _                 ~
                 | .` / _ \  _/ -_) V  V / _ \ '_|  _| ' \ || |                ~
                 |_|\_\___/\__\___|\_/\_/\___/_|  \__|_||_\_, |                ~
                                                          |__/                 ~
================================================================================

ABOUT                                                         *noteworthy-about*

Plugin for vim that allows you to easily create or open a note in specified
libraries.

Author:  Evan Gray <mailto:evanthegrayt@vivaldi.net>
Repo:    https://github.com/evanthegrayt/vim-noteworthy
License: MIT License

================================================================================

TABLE OF CONTENTS                                               *noteworthy-toc*

Setup ........................................... |noteworthy-setup|
  Identifying your notes libraries .............. |g:noteworthy_libraries|
  Setting a default library ..................... |g:noteworthy_default_library|
  Setting file extension for notes .............. |g:noteworthy_file_ext|
  Using the default header ...................... |g:noteworthy_use_header|
  Setting a custom header ....................... |g:noteworthy_header_command|
  Allow any file extension in tab completion .... |g:noteworthy_ambiguous|
Commands ........................................ |noteworthy-commands|
  Create or open a note ......................... |Note|
  Create or open a note in a split .............. |Snote|
  Create or open a note in a vertical split ..... |Vnote|
  Create or open a note in a new tab ............ |Tnote|
  List or change library ........................ |NoteLibrary|
  List or change the file extension being used .. |NoteExtension|
  Allow any file extension in tab completion .... |NoteAmbiguousEnable|
  Disallow any file extension in tab completion . |NoteAmbiguousDisable|

================================================================================

SETUP                                                         *noteworthy-setup*

The following values should be set in your vimrc file.

                                                        *g:noteworthy_libraries*
Identifying your notes libraries~

Declare a dictionary with keys being the library name, and values being
absolute paths to the libraries.
>
    let g:noteworthy_libraries = {
          \   'general':    $HOME . '/notes',
          \   'my_project': $HOME . '/my_project/docs/notes',
          \ }
<
                                                  *g:noteworthy_default_library*
Setting a default library~

Declare one of the keys from |g:noteworthy_libraries| as the default library.
This is not required, but if not set, you will need to use |:NoteLibrary| to
set the library every time you open a new vim instance.
>
    let g:noteworthy_default_library = 'work'
<

                                                         *g:noteworthy_file_ext*
Setting file extension for notes~

The default file extension for notes is Markdown (md). This is customizable.
This should be the file extension, not file type.
>
    let g:noteworthy_file_ext = 'txt'
<

                                                       *g:noteworthy_use_header*
Using the default header~

The plugin will automatically generate a title for new notes. If you call
|:Note| and pass "remember this" as parameters, a file called "remember_this.md"
will be created, and will be given the following header.
>
    # Remember This
<

To disable this behavior, set this in your vimrc.
>
    let g:noteworthy_use_header = 0
<

                                                   *g:noteworthy_header_command*
Setting a custom header~

If you want to define your own command, you can create a string containing
commands to be parsed by |eval()| and used as the header. For example, if you
want the title to be upper-case instead of the default upper-case.
>
    let g:noteworthy_header_command = "'# ' . toupper(title)"
<

This would make the header look like:
>
    # REMEMBER THIS
<

Note that you have access to the variables "file" and "title", which will
resolve to the full file path to the current note, and the base file name with
any extension removed and underscores replaced by spaces, respectively.

In other words, if the current library is "/Users/me/notes", and the note is
"things_to_remember.md", then "file" would resolve to
"/Users/me/notes/things_to_remember.md", and "title" would resolve to "things
to remember".

                                                        *g:noteworthy_ambiguous*
Allow any file extension in tab completion~

The default glob for tab-completion is "*.ext", where "ext" is the result of
|g:noteworthy_file_ext|. To change the glob to "*.*" (any file extension), set
the following in your vimrc. Note that this does not affect
|g:noteworthy_file_ext|, only the tab-completion results.

>
    let g:noteworthy_ambiguous = 1
<

================================================================================

COMMANDS                                                   *noteworthy-commands*

                                                                  *Note* *:Note*
:Note {topic} [{, ...}]    Create new {topic} markdown file in the
                           |b:noteworthy_current_library|, or open it if it
                           already exists. The file extension can be omitted.
                           Can be multiple words separated by spaces, which
                           will be replaced by underscores in the file name.

                                                                *Snote* *:Snote*
:Snote {topic} [{, ...}]   Same as |Note|, but opens in a split.

                                                                *Vnote* *:Vnote*
:Vnote {topic} [{, ...}]   Same as |Note|, but opens in a vertical split.

                                                                *Tnote* *:Tnote*
:Tnote {topic} [{, ...}]   Same as |Note|, but opens in new tab.

                                                    *NoteLibrary* *:NoteLibrary*
:NoteLibrary [{library}]   Switch to {library}, which should be a key of
                           |g:noteworthy_libraries|. If {library} is not
                           provided, the current library being used will be
                           displayed.

                                                *NoteExtension* *:NoteExtension*
:NoteExtension [{ext}]     Change the file extension being used when creating a
                           new note or using tab-completion to {ext}. If {ext}
                           is not provided, the current extension being used
                           will be displayed.

                                    *NoteAmbiguousEnable* *:NoteAmbiguousEnable*
:NoteAmbiguousEnable       Allow any file extension in tab completion. 

                                  *NoteAmbiguousDisable* *:NoteAmbiguousDisable*
:NoteAmbiguousDisable      Disallow any file extension in tab completion.

================================================================================

TIPS AND RECOMMENDED PLUGINS  *noteworthy-tips* *noteworthy-recommended-plugins*

If you have a lot of notes, you can use vim's built-in way to show all available
completions at once. You can trigger this by hitting <c-d> from command-line
mode.

If you're using Markdown as your primary file type (as is the default), I
recommend using the Tagbar (https://github.com/preservim/tagbar) plugin with
Tagbar Markdown (https://github.com/lvht/tagbar-markdown). This indexes the
page by headers, and makes it much easier to navigate large note files.
